"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const api_1 = require("./api");
exports.builder = {
    inputPath: {
        type: 'string',
        required: false,
        description: 'The path to a local tracking plan file'
    },
    outputPath: {
        type: 'string',
        required: false,
        description: 'The output path for the files'
    }
};
function getTypedTrackHandler(fn) {
    return (params) => __awaiter(this, void 0, void 0, function* () {
        const { inputPath, outputPath } = params;
        const events = yield api_1.getTrackingPlanFromFile(inputPath);
        yield fn(params, events);
        console.log(`Files written to ${outputPath}`);
    });
}
exports.getTypedTrackHandler = getTypedTrackHandler;
//# sourceMappingURL=cli.js.map