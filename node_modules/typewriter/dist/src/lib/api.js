"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const util = require("util");
const fs = require("fs");
const node_fetch_1 = require("node-fetch");
const dx_1 = require("@nucleartide/dx");
const readFile = util.promisify(fs.readFile);
const path_1 = require("path");
exports.getTrackingPlanFromFile = (path) => __awaiter(this, void 0, void 0, function* () {
    const file = yield readFile(path, 'utf-8');
    const [json, err] = dx_1.dx(JSON.parse)(file);
    if (err) {
        console.error(`Unable to parse JSON: ${path}`);
        throw err;
    }
    if (!json.events) {
        throw new Error(`Missing "events" array in JSON Schema: ${path}`);
    }
    const fileName = path_1.basename(path, path_1.extname(path));
    return {
        events: json.events,
        name: fileName
    };
});
exports.getTrackingPlanFromNetwork = (workspaceSlug, trackingPlanId, token) => __awaiter(this, void 0, void 0, function* () {
    const options = {
        method: 'get',
        headers: {
            'Content-Type': 'application/json',
            Authorization: `Bearer ${token}`
        }
    };
    const { display_name, rules: { events } } = yield node_fetch_1.default(`https://platform.segmentapis.com/v1beta/workspaces/${workspaceSlug}/tracking-plans/${trackingPlanId}`, options).then(res => {
        if (res.ok) {
            return res.json();
        }
        else {
            throw new Error(`Error fetching Tracking Plan: ${res.status} ${res.statusText}`);
        }
    });
    return {
        events,
        name: display_name
    };
});
//# sourceMappingURL=api.js.map